import PotuzhnoState from '../../state/potuzhnoState';
import {
    CommandActionBuilderWithState,
    Hours,
    hoursToSeconds,
    ICaptureController,
    MessageType,
    Seconds,
    secondsToMilliseconds
} from 'chz-telegram-bot';
import { ChatId } from '../../types/chatIds';
import { randomInt } from '../../helpers/randomInt';
import { getAbortControllerWithTimeout } from '../../helpers/abortControllerWithTimeout';

export const potuzhno = new CommandActionBuilderWithState<PotuzhnoState>(
    'Reaction.Potuzhno',
    () => new PotuzhnoState()
)
    .on(MessageType.Any)
    .notIn([ChatId.PauperChat])
    .when(
        (ctx) =>
            Math.random() < 0.01 && ctx.messageInfo.text != '—Ç–æ–ø –ø–æ—Ç—É–∂–Ω–æ—Å—Ç—ñ'
    )
    .do(async (ctx, state) => {
        const superPotuzhno = Math.random() < 0.01;
        const scoredPoints = superPotuzhno
            ? PotuzhnoState.superChargeMultiplier * state.superCharge
            : 1;

        const scoreFromLegacyBoard = state.scoreBoard[ctx.userInfo.name];
        const scoreFromIdBoard = state.idScoreBoard[ctx.userInfo.id];

        state.idScoreBoard[ctx.userInfo.id] =
            (scoreFromIdBoard ?? scoreFromLegacyBoard ?? 0) + scoredPoints;

        if (state.scoreBoard[ctx.userInfo.name]) {
            delete state.scoreBoard[ctx.userInfo.name];
        }

        ctx.reply.withReaction('üéâ');

        let captureController: ICaptureController;
        if (superPotuzhno) {
            captureController = ctx.reply.withText(
                `üéâüò≥üò≥üò≥üò≥üò≥üò≥üò≥üéâ\nüí™ –°–£–ü–ï–† –ü–û–¢–£–ñ–ù–û \\+${scoredPoints} üí™\nüéâüò≥üò≥üò≥üò≥üò≥üò≥üò≥üéâ`
            );
            state.superCharge += 1;
        } else if (Math.random() < 0.2) {
            captureController = ctx.reply.withVideo('potuzhno');
        } else {
            captureController = ctx.reply.withText('–ü–æ—Ç—É–∂–Ω–æ üí™');
        }

        captureController.captureReplies(
            [/–¥—è–∫—É—é/gi],
            async (replyCtx) => {
                switch (randomInt(0, 4)) {
                    case 0:
                        replyCtx.reply.withText(
                            '–ó–∞–≤–∂–¥–∏ —Ä–∞–¥–∏–π –±–∞—á–∏—Ç–∏ –≤–∞—Å —â–∞—Å–ª–∏–≤–∏–º–∏\\!'
                        );
                        break;
                    case 1:
                        replyCtx.reply.withText('–ù–µ –≤–∞—Ä—Ç–æ –ø–æ–¥—è–∫–∏, —Ü–µ –¥—Ä—ñ–±–Ω–∏—Ü—è');
                        break;
                    case 2:
                        replyCtx.reply.withText('–ó–∞–≤–∂–¥–∏ –¥–æ –≤–∞—à–∏—Ö –ø–æ—Å–ª—É–≥');
                        break;
                    case 3:
                        replyCtx.reply.withText('–ù–µ–º–∞ –∑–∞ —â–æ');
                        break;
                    case 4:
                        replyCtx.reply.withReaction('üòò');
                        break;
                }
                replyCtx.stopCapture();
            },
            getAbortControllerWithTimeout(secondsToMilliseconds(30 as Seconds))
                .controller
        );
    })
    .withRatelimit(1)
    .withCooldown({ cooldown: hoursToSeconds(4 as Hours) })
    .build();
